智能药柜通信协议0.6
通信采用ASCII编码传输  9600bps 8bit 1stop none
LRC校验方式= 从第二个字节累加到最后一个有效数据，然后取反加一
END(结束字)= 0x0d+0x09
从机检查通信产生错误（校验错误或其它错误）后无返回

1、上位机向下位机发送打开柜门命令
0x40(start) + 0x41(‘A’)       + 0x31 (默认为1)+ LOCK_H    + LOCK_L     + LRC_H + LRC_L + 0x0d(END-1) + 0x09(END-2)
首字节   + 锁命令标识：A  + 从机地址:1   + 电磁锁编号H + 电磁锁编号L + LRC(H)+ LRC (L) + 结束字1   + 结束字2
下位机向上位机回复:
0x40(start) + 0x41(‘A’)       + 0x31 (默认为1)+ LOCK_H    + LOCK_L     + LRC_H + LRC_L + 0x0d(END-1) + 0x09(END-2)

2、上位机向下位机发送LED命令   注：LED_S:   0x30=使能LED点亮无闪烁   0x31=使能LED点亮闪烁  0x46=熄灭LED
0x40(start) + 0x42(‘B’)       + 0x31(默认为1) + LED_H   + LED_L   +  LED_S + LRC_H + LRC_L + 0x0d(END-1) + 0x09(END-2)
首字节   + LED命令标识：B + 从机地址:1  + 灯编号(H) + 灯编号(L) + 灯状态 +LRC(H) + LRC (L) + 结束字1   + 结束字2
下位机向上位机回复:
0x40(start) + 0x42(‘B’)       + 0x31(默认为1) + LED_H + LED_L     +  LED_S + LRC_H + LRC_L + 0x0d(END-1) + 0x09(END-2)

3、下位机向上位机发送柜门状态      注：LOCK_S:  0x30=柜门关闭(电磁锁断电)  0x31=柜门打开(电磁锁上电吸合)
0x40(start) + 0x53(‘S’)      + 0x31(默认为1)  + LOCK_H + LOCK_L + LOCK_S + LRC_H + LRC_L + 0x0d(END-1) + 0x09(END-2)
首字节   + 锁命令标识：S + 从机地址:1   + 锁编号(H) + 锁编号(L) + 锁状态 +LRC(H)+ LRC (L) + 结束字1   + 结束字2
上位机向下位机回复:
0x40(start) + 0x53(‘S’)      + 0x31(默认为1)  + LOCK_H + LOCK_L + LOCK_S + LRC_H + LRC_L + 0x0d(END-1) + 0x09(END-2)

4、下位机向上位机发送被按下的按键编号
0x40(start)+ 0x54(‘T’)          +0x31(默认为1) + BUTTON_H + BUTTON_L + LRC_H + LRC_L +0x0d(END-1) + 0x09(END-2)
首字节   + 按键命令标识：T  + 从机地址:1  + 按键编号H + 按键编号L + LRC(H)+ LRC (L) + 结束字1   + 结束字2
上位机向下位机回复:
0x40(start)+ 0x54(‘T’)          +0x31(默认为1) + BUTTON_H + BUTTON_L + LRC_H + LRC_L +0x0d(END-1) + 0x09(END-2)


40 41 31 30 31 32 44 0D 09 
40 4D 31 30 31 32 31 0D 09   //读取第1个门的状态

40 41 31 30 32 32 43 0D 09 
40 4D 31 30 32 32 30 0D 09   //读取第2个门的状态

40 41 31 30 33 32 42 0D 09
40 4D 31 30 33 31 46 0D 09   //读取第3个门的状态

40 41 31 30 34 32 41 0D 09
40 4D 31 30 34 31 45 0D 09   //读取第4个门的状态

40 41 31 30 35 32 39 0D 09 
40 4D 31 30 35 31 44 0D 09   //读取第5个门的状态

40 41 31 30 36 32 38 0D 09 
40 4D 31 30 36 31 43 0D 09   //读取第6个门的状态

40 41 31 30 37 32 37 0D 09 
40 4D 31 30 37 31 42 0D 09   //读取第7个门的状态

40 41 31 30 38 32 36 0D 09
40 4D 31 30 38 31 41 0D 09   //读取第8个门的状态

40 41 31 30 39 32 35 0D 09
40 4D 31 30 39 31 39 0D 09   //读取第9个门的状态

40 41 31 30 41 31 44 0D 09
40 4D 31 30 41 31 31 0D 09   //读取第10个门的状态

40 41 31 30 42 31 43 0D 09 
40 4D 31 30 42 31 30 0D 09   //读取第11个门的状态

40 41 31 30 43 31 42 0D 09 
40 4D 31 30 43 30 46 0D 09   //读取第12个门的状态

40 41 31 30 44 31 41 0D 09
40 4D 31 30 44 30 45 0D 09   //读取第13个门的状态

40 41 31 30 45 31 39 0D 09 
40 4D 31 30 45 30 44 0D 09   //读取第14个门的状态

40 41 31 30 46 31 38 0D 09 
40 4D 31 30 46 30 43 0D 09   //读取第15个门的状态

40 41 31 31 30 32 44 0D 09
40 4D 31 31 30 32 31 0D 09   //读取第16个门的状态

40 41 31 31 31 32 43 0D 09
40 4D 31 31 31 32 30 0D 09   //读取第17个门的状态

40 41 31 31 32 32 42 0D 09
40 4D 31 31 32 31 46 0D 09   //读取第18个门的状态

40 41 31 31 33 32 41 0D 09 
40 4D 31 31 33 31 45 0D 09   //读取第19个门的状态

40 41 31 31 34 32 39 0D 09 
40 4D 31 31 34 31 44 0D 09   //读取第20个门的状态

40 41 31 31 35 32 38 0D 09
40 4D 31 31 35 31 43 0D 09   //读取第21个门的状态

40 41 31 31 36 32 37 0D 09
40 4D 31 31 36 31 42 0D 09   //读取第22个门的状态

40 41 31 31 37 32 36 0D 09
40 4D 31 31 37 31 41 0D 09   //读取第23个门的状态

40 41 31 31 38 32 35 0D 09
40 4D 31 31 38 31 39 0D 09   //读取第24个门的状态

40 41 31 31 39 32 34 0D 09
40 4D 31 31 39 31 38 0D 09   //读取第25个门的状态

40 41 31 31 41 31 43 0D 09
40 41 31 31 42 31 42 0D 09
40 41 31 31 43 31 41 0D 09
40 41 31 31 44 31 39 0D 09
40 41 31 31 45 31 38 0D 09 
40 41 31 31 46 31 37 0D 09 
40 41 31 32 30 32 43 0D 09

40 4C 31 00 00 38 33 0D 09   //一次性读取32个门的状态





40 4D 31 31 41 32 41 0D 09   //读取第26个门的状态
40 4D 31 31 42 31 39 0D 09   //读取第27个门的状态
40 4D 31 31 43 31 38 0D 09   //读取第28个门的状态
40 4D 31 31 44 31 37 0D 09   //读取第29个门的状态
40 4D 31 31 45 31 46 0D 09   //读取第30个门的状态
40 4D 31 31 46 31 45 0D 09   //读取第31个门的状态
40 4D 31 32 30 31 44 0D 09   //读取第32个门的状态

40 48 31 00 00 38 37 0D 09   //查询温湿度


第15个检测开关不行
第16个检测开关不行
第18个检测开关不行
第21个检测开关不行
第24个检测开关不行
